{"version":3,"sources":["knockout.js","knockout-modal.js"],"names":[],"mappingsjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"approve-leave.js","sourcesContent":["function ApproveLeaveViewModel() {\r\n    var self = this;\r\n\r\n    self.teams = ko.observableArray([]);\r\n\r\n    self.approval_filter = ko.observable('submitted');\r\n\r\n    self.teams_found = ko.observable(false);\r\n\r\n    self.error_modal = {\r\n        error_message: ko.observable(),\r\n        error_code: ko.observable(),\r\n        show: ko.observable(false), /* Set to true to show initially */\r\n        body: ko.observable(),\r\n        header: ko.observable(),\r\n        onClose: function() {\r\n\r\n        }\r\n    }\r\n\r\n    self.showErrorModal = function(error_message, error_code) {\r\n        self.error_modal.show(true);\r\n        self.error_modal.error_message(error_message);\r\n        self.error_modal.error_code(error_code);\r\n\r\n        if(error_code < 500) {\r\n            self.error_modal.header(\"Notice\");\r\n            self.error_modal.body(\"Please Note:\");\r\n        } else if(error_code < 1000) {\r\n            self.error_modal.header(\"Warning\");\r\n            self.error_modal.body(\"Warning:\");\r\n        } else if(error_code < 1500) {\r\n            self.error_modal.header(\"Error\");\r\n            self.error_modal.body(\"The application has encountered an error:\");\r\n        } else {\r\n            self.error_modal.header(\"Fatal Error\");\r\n            self.error_modal.body(\"The application has encountered a fatal error:\");\r\n        }\r\n    };\r\n\r\n    self.deny_modal = {\r\n        header: \"Enter Notes\",\r\n        body: ko.observable(),\r\n        closeLabel: \"Cancel\",\r\n        primaryLabel: \"Deny Leave\",\r\n        show: ko.observable(false), /* Set to true to show initially */\r\n        onClose: function() {\r\n\r\n        },\r\n        onAction: function() {\r\n            self.deny_modal.leave_request.authorized(\"denied\");\r\n            self.deny_modal.leave_request.management_notes(self.deny_modal.body());\r\n            self.deny_modal.show(false);\r\n            var jsonData = ko.toJSON(self.deny_modal.leave_request);\r\n            $.post(\r\n                \"availability/availabilities-for-approval\",\r\n                {data: jsonData},\r\n                function(returnedData) {\r\n\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    self.showDenyModal = function(leave_request) {\r\n        self.deny_modal.show(true);\r\n        self.deny_modal.leave_request = leave_request;\r\n        self.deny_modal.body(leave_request.management_notes());\r\n    };\r\n\r\n    self.getLeaveRequests = function() {\r\n        var data = { authorized: self.approval_filter() };\r\n\r\n        self.teams.removeAll();\r\n\r\n        $.getJSON(\"availability/availabilities-for-approval\", data, function(allData) {\r\n            if(allData['result'] == 0) {\r\n                self.teams_found(true);\r\n\r\n                $.each(allData.data, function(key, val) {\r\n                    if(typeof val !== 'undefined'){\r\n                        self.teams.push(ko.observable(new Team(val)));\r\n                    }\r\n                });\r\n            } else {\r\n                self.showErrorModal(allData['message'], allData['result']);\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n    self.approveLeave = function(status, leave_request) {\r\n        leave_request.authorized(status);\r\n\r\n        var jsonData = ko.toJSON(leave_request);\r\n        $.post(\r\n            \"availability/availabilities-for-approval\",\r\n            {data: jsonData},\r\n            function(returnedData) {\r\n\r\n            });\r\n    };\r\n\r\n    self.getLeaveRequests();\r\n}\r\n\r\nfunction Team(team) {\r\n    this.id = ko.observable(team.id);\r\n    this.name = ko.observable(team.name);\r\n    this.team_leader_id = ko.observable(team.team_leader_id);\r\n    this.manager_id = ko.observable(team.manager_id);\r\n\r\n    this.team_members = ko.observableArray([]);\r\n\r\n    var parent = this;\r\n\r\n    $.each(team.user, function(key, val) {\r\n        if(typeof val !== 'undefined') {\r\n            parent.team_members.push(new Employee(val))\r\n        }\r\n    });\r\n}\r\n\r\nfunction Employee(user) {\r\n    this.user_id = ko.observable(user.id);\r\n    this.first_name = ko.observable(user.first_name);\r\n    this.last_name = ko.observable(user.last_name);\r\n    this.full_name = ko.observable(this.first_name() + \" \" + this.last_name());\r\n    this.email = ko.observable(user.email);\r\n    this.leave_request = ko.observableArray([]);\r\n    this.gravatar_address = ko.observable('//www.gravatar.com/avatar/' + md5(this.email()) + '?s=30&d=retro');\r\n\r\n    var parent = this;\r\n\r\n    $.each(user.availspecific, function(key, val) {\r\n        parent.leave_request.push(new LeaveRequest(val, parent.user_id));\r\n    });\r\n}\r\n\r\nEmployee.prototype.toJSON = function() {\r\n    return { user_id: this.user_id, first_name: this.first_name, last_name: this.last_name, email: this.email, shifts: this.shifts, availspecific: this.leave_request };\r\n}\r\n\r\nfunction LeaveRequest(leave_request, user_id) {\r\n    this.id = ko.observable(leave_request.id);\r\n    this.user_id = ko.observable(user_id);\r\n    this.start_date = ko.observable(leave_request.start_date);\r\n    this.end_date = ko.observable(leave_request.end_date);\r\n    this.start_time = ko.observable(leave_request.start_time);\r\n    this.end_time = ko.observable(leave_request.end_time);\r\n\r\n    this.all_day = ko.observable(leave_request.all_day);\r\n    this.employee_notes = ko.observable(leave_request.pivot.employee_notes);\r\n    this.management_notes = ko.observable(leave_request.pivot.management_notes);\r\n    this.authorized = ko.observable(leave_request.pivot.authorized);\r\n    console.log(this.authorized());\r\n\r\n    this.formatted_start_date = ko.computed({\r\n        read: function() {\r\n            if(this.all_day() == 1) {\r\n                return moment(this.start_date(), 'YYYY-MM-DD').format('ddd, D MMM YYYY');\r\n            } else {\r\n                return moment(this.start_date() + \" \" + this.start_time(), 'YYYY-MM-DD HH:mm').format('HH:mm ddd, D MMM YYYY');\r\n            }\r\n        },\r\n        owner: this\r\n    });\r\n    this.formatted_end_date = ko.computed({\r\n        read: function() {\r\n            if(this.all_day() == 1) {\r\n                return moment(this.end_date(), 'YYYY-MM-DD').format('ddd, D MMM YYYY');\r\n            } else {\r\n                return moment(this.end_date() + \" \" + this.end_time(), 'YYYY-MM-DD HH:mm').format('HH:mm ddd, D MMM YYYY');\r\n            }\r\n        },\r\n        owner: this\r\n    });\r\n}\r\n\r\nLeaveRequest.prototype.toJSON = function() {\r\n    return { id: this.id, user_id: this.user_id, management_notes: this.management_notes, authorized: this.authorized };\r\n}\r\n\r\n/* Custom binding for making denial modal */\r\nko.bindingHandlers.bootstrapModal = {\r\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n        var props = valueAccessor(),\r\n            vm = bindingContext.createChildContext(viewModel);\r\n        ko.utils.extend(vm, props);\r\n        vm.close = function() {\r\n            vm.show(false);\r\n            vm.onClose();\r\n        };\r\n        vm.action = function() {\r\n            vm.onAction();\r\n        }\r\n        ko.utils.toggleDomNodeCssClass(element, \"modal fade\", true);\r\n        ko.renderTemplate(\"denyModal\", vm, null, element);\r\n        var showHide = ko.computed(function() {\r\n            $(element).modal(vm.show() ? 'show' : 'hide');\r\n        });\r\n        return {\r\n            controlsDescendantBindings: true\r\n        };\r\n    }\r\n}\r\n\r\n// Activates knockout.js\r\nko.applyBindings(new ApproveLeaveViewModel());","/* Custom binding for making error modal */\r\nko.bindingHandlers.bootstrapErrorModal = {\r\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n        var props = valueAccessor(),\r\n            vm = bindingContext.createChildContext(viewModel);\r\n        ko.utils.extend(vm, props);\r\n        vm.close = function() {\r\n            vm.show(false);\r\n            vm.onClose();\r\n        };\r\n        ko.utils.toggleDomNodeCssClass(element, \"modal fade\", true);\r\n        ko.renderTemplate(\"errorModal\", vm, null, element);\r\n        var showHide = ko.computed(function() {\r\n            $(element).modal(vm.show() ? 'show' : 'hide');\r\n        });\r\n        return {\r\n            controlsDescendantBindings: true\r\n        };\r\n    }\r\n};\r\n\r\nvar error_modal = {\r\n    error_message: ko.observable(),\r\n    error_code: ko.observable(),\r\n    show: ko.observable(false), /* Set to true to show initially */\r\n    body: ko.observable(),\r\n    header: ko.observable(),\r\n    onClose: function() {}\r\n};\r\n\r\nvar errorModal = function(error_message, error_code) {\r\n    self.error_modal.show(true);\r\n    self.error_modal.error_message(error_message);\r\n    self.error_modal.error_code(error_code);\r\n\r\n    if(error_code < 500) {\r\n        self.error_modal.header(\"Notice\");\r\n        self.error_modal.body(\"Please Note:\");\r\n    } else if(error_code < 1000) {\r\n        self.error_modal.header(\"Warning\");\r\n        self.error_modal.body(\"Warning:\");\r\n    } else if(error_code < 1500) {\r\n        self.error_modal.header(\"Error\");\r\n        self.error_modal.body(\"The application has encountered an error:\");\r\n    } else {\r\n        self.error_modal.header(\"Fatal Error\");\r\n        self.error_modal.body(\"The application has encountered a fatal error:\");\r\n    }\r\n};"],"sourceRoot":"/source/"}
{"version":3,"sources":["fuelux.wizard.js","knockout.js"],"names":[],"mappingsfile":"setup-wizard.js","sourcesContent":["(function(b,c){var a=function(f,e){var d;this.$element=b(f);this.options=b.extend({},b.fn.wizard.defaults,e);this.currentStep=1;this.numSteps=this.$element.find(\"li\").length;this.$prevBtn=this.$element.find(\"button.btn-prev\");this.$nextBtn=this.$element.find(\"button.btn-next\");d=this.$nextBtn.children().detach();this.nextText=b.trim(this.$nextBtn.text());this.$nextBtn.append(d);this.$prevBtn.on(\"click\",b.proxy(this.previous,this));this.$nextBtn.on(\"click\",b.proxy(this.next,this));this.$element.on(\"click\",\"li.complete\",b.proxy(this.stepclicked,this))};a.prototype={constructor:a,setState:function(){var n=(this.currentStep>1);var o=(this.currentStep===1);var d=(this.currentStep===this.numSteps);this.$prevBtn.attr(\"disabled\",(o===true||n===false));var h=this.$nextBtn.data();if(h&&h.last){this.lastText=h.last;if(typeof this.lastText!==\"undefined\"){var l=(d!==true)?this.nextText:this.lastText;var f=this.$nextBtn.children().detach();this.$nextBtn.text(l).append(f)}}var j=this.$element.find(\"li\");j.removeClass(\"active\").removeClass(\"complete\");j.find(\"span.badge\").removeClass(\"badge-info\").removeClass(\"badge-success\");var m=\"li:lt(\"+(this.currentStep-1)+\")\";var g=this.$element.find(m);g.addClass(\"complete\");g.find(\"span.badge\").addClass(\"badge-success\");var e=\"li:eq(\"+(this.currentStep-1)+\")\";var k=this.$element.find(e);k.addClass(\"active\");k.find(\"span.badge\").addClass(\"badge-info\");var i=k.data().target;b(\".step-pane\").removeClass(\"active\");b(i).addClass(\"active\");this.$element.trigger(\"changed\")},stepclicked:function(h){var d=b(h.currentTarget);var g=b(\".steps li\").index(d);var f=b.Event(\"stepclick\");this.$element.trigger(f,{step:g+1});if(f.isDefaultPrevented()){return}this.currentStep=(g+1);this.setState()},previous:function(){var d=(this.currentStep>1);if(d){var f=b.Event(\"change\");this.$element.trigger(f,{step:this.currentStep,direction:\"previous\"});if(f.isDefaultPrevented()){return}this.currentStep-=1;this.setState()}},next:function(){var g=(this.currentStep+1<=this.numSteps);var d=(this.currentStep===this.numSteps);if(g){var f=b.Event(\"change\");this.$element.trigger(f,{step:this.currentStep,direction:\"next\"});if(f.isDefaultPrevented()){return}this.currentStep+=1;this.setState()}else{if(d){this.$element.trigger(\"finished\")}}},selectedItem:function(d){return{step:this.currentStep}}};b.fn.wizard=function(e,g){var f;var d=this.each(function(){var j=b(this);var i=j.data(\"wizard\");var h=typeof e===\"object\"&&e;if(!i){j.data(\"wizard\",(i=new a(this,h)))}if(typeof e===\"string\"){f=i[e](g)}});return(f===c)?d:f};b.fn.wizard.defaults={};b.fn.wizard.Constructor=a;b(function(){b(\"body\").on(\"mousedown.wizard.data-api\",\".wizard\",function(){var d=b(this);if(d.data(\"wizard\")){return}d.wizard(d.data())})})})(window.jQuery);","function SetupWizardViewModel() {\r\n    var self = this;\r\n\r\n    self.opening_hours = ko.observableArray([new OpeningHours(0), new OpeningHours(1), new OpeningHours(2), new OpeningHours(3), new OpeningHours(4), new OpeningHours(5), new OpeningHours(6)]);\r\n\r\n    self.admin = ko.observable();\r\n\r\n    self.teams = ko.observableArray([]);\r\n\r\n    self.organisation = ko.observable();\r\n\r\n    self.selected_team = ko.observable();\r\n\r\n    self.error_modal = {\r\n        error_message: ko.observable(),\r\n        error_code: ko.observable(),\r\n        show: ko.observable(false), /* Set to true to show initially */\r\n        body: ko.observable(),\r\n        header: ko.observable(),\r\n        onClose: function(){}\r\n    };\r\n\r\n    self.create_team_modal = {\r\n        name: ko.observable(),\r\n        description: ko.observable(),\r\n        show: ko.observable(false),\r\n        onClose: function() {\r\n\r\n        },\r\n        onAction: function() {\r\n            var team = new Team({name: self.create_team_modal.name(), description: self.create_team_modal.description(), id: \"\"});\r\n            var jsonData = team.toJSON();\r\n\r\n            $.post(\r\n                \"team/team\",\r\n                {data: jsonData},\r\n                function(returnedData) {\r\n                    if(returnedData.result == 0) {\r\n                        if(returnedData.data.team_id != 'undefined') {\r\n                            team.id = returnedData.data.team_id;\r\n                        }\r\n                        self.teams.push(team);\r\n                    } else {\r\n                        self.showErrorModal(returnedData.result, returnedData.message);\r\n                    }\r\n                    self.create_team_modal.show(false);\r\n                    self.create_team_modal.name(\"\");\r\n                    self.create_team_modal.description(\"\");\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    self.edit_user_modal = {\r\n        header: \"Edit Team Member\",\r\n        first_name: ko.observable(),\r\n        last_name: ko.observable(),\r\n        phone_one: ko.observable(),\r\n        phone_two: ko.observable(),\r\n        email: ko.observable(),\r\n        gender: ko.observable(),\r\n        address: ko.observable(),\r\n        post_code: ko.observable(),\r\n        city: ko.observable(),\r\n        pay_rate: ko.observable(),\r\n        closeLabel: \"Cancel\",\r\n        primaryLabel: \"Save\",\r\n        show: ko.observable(false),\r\n\r\n        onClose: function() {\r\n\r\n        },\r\n        onAction: function() {\r\n            self.edit_user_modal.user().first_name(self.edit_user_modal.first_name());\r\n            self.edit_user_modal.user().last_name(self.edit_user_modal.last_name());\r\n            self.edit_user_modal.user().phone_one(self.edit_user_modal.phone_one());\r\n            self.edit_user_modal.user().phone_two(self.edit_user_modal.phone_two());\r\n            self.edit_user_modal.user().email(self.edit_user_modal.email());\r\n            self.edit_user_modal.user().gender(self.edit_user_modal.gender());\r\n            self.edit_user_modal.user().address(self.edit_user_modal.address());\r\n            self.edit_user_modal.user().post_code(self.edit_user_modal.post_code());\r\n            self.edit_user_modal.user().city(self.edit_user_modal.city());\r\n            self.edit_user_modal.user().pay_rate(self.edit_user_modal.pay_rate());\r\n            if( self.edit_user_modal.first_name() === \"\" ||\r\n                self.edit_user_modal.last_name() === \"\" ||\r\n                self.edit_user_modal.email() === \"\" ){\r\n                alert(\"Error: You have not completed all of the required fields\");\r\n            } else {\r\n                self.edit_user_modal.show(false);\r\n                self.edit_user_modal.post_function();\r\n            }\r\n        }\r\n    };\r\n\r\n    self.addTeamLeader = function(team) {\r\n        self.addMember(team, team.team_leader);\r\n        self.edit_user_modal.post_function = function() {\r\n            var jsonData = ko.toJSON(self.edit_user_modal.user);\r\n            $.post(\r\n                \"user/user\",\r\n                {data: jsonData},\r\n                function(returnedData) {\r\n                    if(returnedData.result == 0) {\r\n                        self.edit_user_modal.team.team_leader().user_id(returnedData.data.id);\r\n                        console.log(self.edit_user_modal.team.team_leader().user_id());\r\n                        var team_json = self.edit_user_modal.team.toJSON();\r\n                        $.post(\r\n                            \"team/team\",\r\n                            { data: team_json },\r\n                            function(returnedData) {\r\n                                if(returnedData.result == 0) {\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    };\r\n\r\n    self.addManager = function(team) {\r\n        self.addMember(team, team.manager);\r\n        self.edit_user_modal.post_function = function() {\r\n            var jsonData = ko.toJSON(self.edit_user_modal.user);\r\n            $.post(\r\n                \"user/user\",\r\n                {data: jsonData},\r\n                function(returnedData) {\r\n                    if(returnedData.result == 0) {\r\n                        self.edit_user_modal.team.manager().user_id(returnedData.data.id);\r\n                        var team_json = self.edit_user_modal.team.toJSON();\r\n                        $.post(\r\n                            \"team/team\",\r\n                            { data: team_json },\r\n                            function(returnedData) {\r\n                                if(returnedData.result == 0) {\r\n\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    };\r\n\r\n    self.addTeamMember = function(team) {\r\n        var new_employee = ko.observable(new Employee);\r\n        console.log(new_employee);\r\n        self.addMember(team, new_employee);\r\n        self.edit_user_modal.post_function = function() {\r\n            console.log(self.edit_user_modal.team);\r\n            self.edit_user_modal.user().team_id(self.edit_user_modal.team.id());\r\n            var jsonData = ko.toJSON(self.edit_user_modal.user);\r\n            $.post(\r\n                \"user/user\",\r\n                {data: jsonData},\r\n                function(returnedData) {\r\n                    if(returnedData.result == 0)\r\n                    {\r\n                        self.edit_user_modal.user().user_id(returnedData.data.id);\r\n                        self.edit_user_modal.team.team_members.push(self.edit_user_modal.user);\r\n                        self.edit_user_modal.team.team_members.notifySubscribers();\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    };\r\n\r\n    self.addMember = function(team, employee) {\r\n        self.edit_user_modal.user = employee;\r\n        self.edit_user_modal.team = team;\r\n        self.edit_user_modal.first_name(\"\");\r\n        self.edit_user_modal.last_name(\"\");\r\n        self.edit_user_modal.phone_one(\"\");\r\n        self.edit_user_modal.phone_two(\"\");\r\n        self.edit_user_modal.email(\"\");\r\n        self.edit_user_modal.gender(\"\");\r\n        self.edit_user_modal.address(\"\");\r\n        self.edit_user_modal.post_code(\"\");\r\n        self.edit_user_modal.city(\"\");\r\n        self.edit_user_modal.pay_rate(\"\");\r\n        self.edit_user_modal.show(true);\r\n    };\r\n\r\n    self.editTeamMember = function(employee) {\r\n        self.edit_user_modal.user = ko.observable(employee);\r\n        self.edit_user_modal.first_name(employee.first_name());\r\n        self.edit_user_modal.last_name(employee.last_name());\r\n        self.edit_user_modal.phone_one(employee.phone_one());\r\n        self.edit_user_modal.phone_two(employee.phone_two());\r\n        self.edit_user_modal.email(employee.email());\r\n        self.edit_user_modal.gender(employee.gender());\r\n        self.edit_user_modal.address(employee.address());\r\n        self.edit_user_modal.post_code(employee.post_code());\r\n        self.edit_user_modal.city(employee.city());\r\n        self.edit_user_modal.pay_rate(employee.pay_rate());\r\n\r\n        self.edit_user_modal.post_function = function() {\r\n            var jsonData = ko.toJSON(self.edit_user_modal.user);\r\n            $.post(\r\n                \"user/user\",\r\n                {data: jsonData},\r\n                function(returnedData) {}\r\n            )\r\n        };\r\n        self.edit_user_modal.show(true);\r\n\r\n    };\r\n\r\n    self.hours_is_saved = function (bool) {\r\n        self.hours_saved(bool);\r\n    }.bind(self);\r\n\r\n    self.company_info_saved = function (bool) {\r\n        self.company_saved(bool);\r\n    }.bind(self);\r\n\r\n    self.admin_info_saved = function (bool) {\r\n        self.admin_saved(bool);\r\n    }.bind(self);\r\n\r\n    self.hours_saved = ko.observable(true);\r\n    self.company_saved = ko.observable(true);\r\n    self.admin_saved = ko.observable(true);\r\n\r\n    self.showErrorModal = function(error_message, error_code) {\r\n        self.error_modal.show(true);\r\n        self.error_modal.error_message(error_message);\r\n        self.error_modal.error_code(error_code);\r\n\r\n        if(error_code < 500) {\r\n            self.error_modal.header(\"Notice\");\r\n            self.error_modal.body(\"Please Note:\");\r\n        } else if(error_code < 1000) {\r\n            self.error_modal.header(\"Warning\");\r\n            self.error_modal.body(\"Warning:\");\r\n        } else if(error_code < 1500) {\r\n            self.error_modal.header(\"Error\");\r\n            self.error_modal.body(\"The application has encountered an error:\");\r\n        } else {\r\n            self.error_modal.header(\"Fatal Error\");\r\n            self.error_modal.body(\"The application has encountered a fatal error:\");\r\n        }\r\n    };\r\n\r\n    self.showCreateTeamModal = function() {\r\n        self.create_team_modal.show(true);\r\n    };\r\n\r\n    self.getOrganisationAvailabilities = function() {\r\n        $.getJSON(\"organisation/organisation-opening-hours\" , [], function(allData) {\r\n            if(allData['result'] == 0) {\r\n                $.each(allData['data'], function(key, val){\r\n                    var day = self.opening_hours()[moment(val.day, \"dddd\").format(\"E\")-1];\r\n                    day.formatted_open_time(val.start_time);\r\n                    day.formatted_close_time(val.end_time);\r\n                });\r\n                self.hours_is_saved(true);\r\n            }\r\n        })\r\n    };\r\n\r\n    self.getOrganisationProfile = function() {\r\n        $.getJSON(\"organisation/organisation-profile\", [], function(allData) {\r\n            if(allData['result'] == 0) {\r\n                self.organisation(new Organisation(allData['data']));\r\n                self.company_info_saved(true);\r\n            }\r\n        })\r\n    };\r\n\r\n    self.getAdminProfile = function() {\r\n        $.getJSON(\"user/user\", [], function(allData) {\r\n            if(allData['result'] == 0) {\r\n                var employee = new Employee();\r\n                employee.addEmployee(allData['data']);\r\n                self.admin(employee);\r\n                self.admin_info_saved(true);\r\n\r\n            }\r\n        })\r\n    };\r\n\r\n    self.getTeams = function() {\r\n        $.getJSON(\"team/all-teams\", [], function(allData) {\r\n            if(allData['result'] == 0) {\r\n                var mappedTeams = $.map(allData['data'], function(val, key) { return new Team(val)});\r\n                self.teams(mappedTeams);\r\n            }\r\n\r\n            if(self.teams().length > 0) {\r\n                self.selected_team(self.teams()[0]);\r\n            }\r\n        });\r\n    };\r\n\r\n    self.saveOrganisationProfile = function() {\r\n        var jsonData = ko.toJSON(self.organisation);\r\n        $.post(\r\n            \"organisation/organisation-profile\",\r\n            {data: jsonData},\r\n            function(returnedData) {\r\n                if(returnedData.result == 0) {\r\n                    self.company_info_saved(true);\r\n                }\r\n            });\r\n    };\r\n\r\n    self.saveOpeningHours = function() {\r\n        var jsonData = ko.toJSON(self);\r\n        $.post(\r\n            \"organisation/organisation-opening-hours\",\r\n            {data: jsonData},\r\n            function(returnedData) {\r\n                if(returnedData.result == 0) {\r\n                    self.hours_is_saved(true);\r\n                }\r\n            });\r\n    };\r\n\r\n    self.saveAdminProfile = function() {\r\n        var jsonData = ko.toJSON(self.admin);\r\n        $.post(\r\n            \"user/user\",\r\n            {data: jsonData},\r\n            function(returnedData) {\r\n                if(returnedData.result == 0) {\r\n                    self.admin_info_saved(true);\r\n                }\r\n            });\r\n    };\r\n\r\n    self.deleteTeam = function(team) {\r\n        var jsonData = team.toJSON();\r\n\r\n        $.post(\r\n            \"team/delete-team\",\r\n            {data: jsonData},\r\n            function(returnedData) {\r\n                if(returnedData.result == 0) {\r\n                    self.teams.remove(team);\r\n                } else {\r\n                    self.showErrorModal(returnedData.result, returnedData.message);\r\n                }\r\n            }\r\n        )\r\n    };\r\n\r\n    self.completeWizard = function() {\r\n        self.saveAdminProfile();\r\n        self.saveOrganisationProfile();\r\n\r\n        window.location.href = \"/complete_setup_wizard\";\r\n    };\r\n\r\n    self.selectTeam = function(data) {\r\n        self.selected_team(data);\r\n    }.bind(self);\r\n\r\n    self.getOrganisationProfile();\r\n    self.getAdminProfile();\r\n    self.getTeams();\r\n}\r\n\r\nfunction Organisation(organisation) {\r\n    this.id = ko.observable(organisation.id);\r\n    this.name = ko.observable(organisation.name);\r\n    this.email = ko.observable(organisation.email);\r\n    this.phone = ko.observable(organisation.phone);\r\n    this.address = ko.observable(organisation.address);\r\n    this.post_code = ko.observable(organisation.post_code);\r\n    if(organisation.city !== undefined && organisation.city !== null) {\r\n        this.city = ko.observable(organisation.city.city_name);\r\n        this.country = ko.observable(organisation.city.country );\r\n    } else {\r\n        this.city = ko.observable(\"\");\r\n        this.country = ko.observable(\"\");\r\n    }\r\n    this.timezone = 'Australia/Melbourne';\r\n}\r\n\r\nfunction Employee() {\r\n    this.user_id = ko.observable(\"\");\r\n    this.first_name = ko.observable(\"\");\r\n    this.last_name = ko.observable(\"\");\r\n\r\n    this.full_name = ko.computed(\r\n        function() {\r\n            return this.first_name() + \" \" + this.last_name();\r\n        },\r\n        this\r\n    );\r\n    this.active = ko.observable(true);\r\n    this.email = ko.observable(\"\");\r\n    this.gender = ko.observable(\"\");\r\n    this.phone_one = ko.observable(\"\");\r\n    this.phone_two = ko.observable(\"\");\r\n    this.address = ko.observable(\"\");\r\n    this.post_code = ko.observable(\"\");\r\n    this.city = ko.observable(\"\");\r\n    this.pay_rate = ko.observable(\"\");\r\n    this.team_id = ko.observable(\"\");\r\n}\r\n\r\nEmployee.prototype.toJSON = function() {\r\n    return { user_id: this.user_id, first_name: this.first_name, last_name: this.last_name, email: this.email,\r\n        phone_one: this.phone_one, phone_two: this.phone_two, address: this.address, post_code: this.post_code,\r\n        gender: this.gender, city: this.city, pay_rate: this.pay_rate, team_id: this.team_id, active: this.active };\r\n};\r\n\r\nEmployee.prototype.addEmployee = function(user) {\r\n    this.user_id = ko.observable(user.id);\r\n    this.first_name = ko.observable(user.first_name);\r\n    this.last_name = ko.observable(user.last_name);\r\n\r\n    this.full_name = ko.computed(\r\n        function() {\r\n            return this.first_name() + \" \" + this.last_name();\r\n        },\r\n        this\r\n    );\r\n    this.active = ko.observable(user.active);\r\n    this.email = ko.observable(user.email);\r\n    this.gender = ko.observable(user.gender);\r\n    this.phone_one = ko.observable(user.phone_one);\r\n    this.phone_two = ko.observable(user.phone_two);\r\n    this.address = ko.observable(user.address);\r\n    this.post_code = ko.observable(user.post_code);\r\n    if(user.city !== undefined && user.city !== null) {\r\n        this.city = ko.observable(user.city.city_name);\r\n    }\r\n    if(user.payrate.length != 0){\r\n        this.pay_rate = ko.observable(Math.round(user.payrate[0].pay_rate*100)/100);\r\n    }\r\n    this.team_id = ko.observable(user.team_id);\r\n\r\n};\r\n\r\nfunction OpeningHours(weekday) {\r\n    this.open_time = ko.observable(\"\");\r\n    this.close_time = ko.observable(\"\");\r\n    this.weekday = ko.observable(moment(weekday+1, \"E\").format(\"dddd\"));\r\n\r\n    this.error_status = ko.observable();\r\n\r\n    this.formatted_open_time = ko.computed({\r\n        read: function () {\r\n            if(this.open_time() == \"\" || this.open_time() == undefined) {\r\n                return \"\";\r\n            } else {\r\n                return moment(this.open_time(), 'H:mm').format('H:mm');\r\n            }\r\n        },\r\n        write: function (value) {\r\n            var parent = this;\r\n\r\n            if(value == \"\") {\r\n                parent.open_time(\"\");\r\n\r\n            } else {\r\n                var new_open_time = moment(value, 'H:mm');\r\n                var close_time = moment(parent.close_time(), 'H:mm');\r\n\r\n                if(!new_open_time.isValid()) {\r\n                    parent.open_time.notifySubscribers();\r\n                } else if (new_open_time.isAfter(close_time) && parent.close_time() != \"\") {\r\n                    parent.open_time.notifySubscribers();\r\n                    alert(\"Shift start is after shift ending\");\r\n                } else {\r\n                    parent.open_time(new_open_time.format('H:mm'));\r\n                }\r\n            }\r\n        },\r\n        owner: this\r\n    }).extend({ notify: 'always' });\r\n\r\n    this.formatted_close_time = ko.computed({\r\n        read: function () {\r\n            if(this.close_time() == \"\" || this.close_time() == undefined) {\r\n                return \"\";\r\n            } else {\r\n                return moment(this.close_time(), 'H:mm').format('H:mm');\r\n            }\r\n        },\r\n        write: function (value) {\r\n            var parent = this;\r\n            if(value == \"\") {\r\n                parent.close_time(\"\");\r\n\r\n            } else {\r\n                var new_close_time = moment(value, 'H:mm');\r\n                var open_time = moment(parent.open_time(), 'H:mm');\r\n\r\n                if(!new_close_time.isValid()) {\r\n                    parent.close_time.notifySubscribers();\r\n                } else if (open_time.isAfter(new_close_time) && parent.open_time() != \"\") {\r\n                    parent.close_time.notifySubscribers();\r\n                    alert(\"Shift start is after shift ending\");\r\n                } else {\r\n                    parent.close_time(new_close_time.format('H:mm'));\r\n                }\r\n            }\r\n        },\r\n        owner: this\r\n    }).extend({ notify: 'always' });\r\n}\r\n\r\nOpeningHours.prototype.toJSON = function() {\r\n    return { open_time: this.open_time, close_time: this.close_time, weekday: this.weekday };\r\n};\r\n\r\nfunction Team(team) {\r\n    this.id = ko.observable(team.id);\r\n    this.name = ko.observable(team.name);\r\n    this.description = ko.observable(team.description);\r\n\r\n    this.team_leader = ko.observable(new Employee);\r\n    if(typeof team.user_related_by_team_leader_id != 'undefined' && team.user_related_by_team_leader_id != null)\r\n        this.team_leader().addEmployee(team.user_related_by_team_leader_id);\r\n\r\n    this.manager = ko.observable(new Employee);\r\n    if(typeof team.user_related_by_manager_id != 'undefined' && team.user_related_by_manager_id != null)\r\n        this.manager().addEmployee(team.user_related_by_manager_id);\r\n\r\n    this.team_members = ko.observableArray([]);\r\n\r\n    var parent = this;\r\n    if(team.user !== undefined) {\r\n        $.each(team.user, function(key, val) {\r\n            if(typeof val !== 'undefined') {\r\n                var employee = new Employee;\r\n                employee.addEmployee(val)\r\n                parent.team_members.push(employee);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nTeam.prototype.toJSON = function () {\r\n    return {id: this.id, name: this.name, description: this.description, team_leader_id: this.team_leader().user_id(),\r\n        manager_id: this.manager().user_id(), team_members: this.team_members};\r\n}\r\n\r\n/* Custom binding for making create team modal */\r\nko.bindingHandlers.createTeamModal = {\r\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n        var props = valueAccessor(),\r\n            vm = bindingContext.createChildContext(viewModel);\r\n        ko.utils.extend(vm, props);\r\n        vm.close = function() {\r\n            vm.show(false);\r\n            vm.onClose();\r\n        };\r\n        vm.action = function() {\r\n            vm.onAction();\r\n        };\r\n        ko.utils.toggleDomNodeCssClass(element, \"modal fade\", true);\r\n        ko.renderTemplate(\"createTeamModal\", vm, null, element);\r\n        var showHide = ko.computed(function() {\r\n            $(element).modal(vm.show() ? 'show' : 'hide');\r\n        });\r\n        return {\r\n            controlsDescendantBindings: true\r\n        };\r\n    }\r\n};\r\n\r\n/* Custom binding for making add user modal */\r\nko.bindingHandlers.bootstrapModal = {\r\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\r\n        var props = valueAccessor(),\r\n            vm = bindingContext.createChildContext(viewModel);\r\n        ko.utils.extend(vm, props);\r\n        vm.close = function() {\r\n            vm.show(false);\r\n            vm.onClose();\r\n        };\r\n        vm.action = function() {\r\n            vm.onAction();\r\n        };\r\n        ko.utils.toggleDomNodeCssClass(element, \"modal fade\", true);\r\n        ko.renderTemplate(\"editUserModal\", vm, null, element);\r\n        var showHide = ko.computed(function() {\r\n            $(element).modal(vm.show() ? 'show' : 'hide');\r\n        });\r\n        return {\r\n            controlsDescendantBindings: true\r\n        };\r\n    }\r\n};\r\n\r\nko.applyBindings(new SetupWizardViewModel());"],"sourceRoot":"/source/"}
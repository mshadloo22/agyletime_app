{"version":3,"sources":["ForecastMethod.js","Role.js","Workstream.js","knockout.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"manage-workstreams.js","sourcesContent":["function ForecastMethod() {\r\n    this.id = ko.observable(\"\");\r\n    this.name = ko.observable(\"\");\r\n}\r\n\r\nForecastMethod.prototype.addForecastMethod = function(id, name) {\r\n    this.id(parseInt(id));\r\n    this.name(name);\r\n\r\n    return this;\r\n};","function Role() {\r\n    this.id = ko.observable(\"\");\r\n    this.name = ko.observable(\"\");\r\n}\r\n\r\nRole.prototype.addRole = function(id, name) {\r\n    this.id(parseInt(id));\r\n    this.name(name);\r\n\r\n    return this;\r\n};","function Workstream() {\r\n    this.name = ko.observable(\"\");\r\n    this.description = ko.observable(\"\");\r\n    this.identifier = ko.observable(\"\");\r\n    this.color = ko.observable(\"\");\r\n    this.role_id = ko.observable(\"\");\r\n    this.wait_time_threshold = ko.observable(\"\");\r\n    this.grade_of_service = ko.observable(\"\");\r\n    this.aht_goal = ko.observable(\"\");\r\n    this.abandon_threshold = ko.observable(\"\");\r\n    this.forecast_method_id = ko.observable(\"\");\r\n    this.saved = ko.observable(true);\r\n}\r\n\r\nWorkstream.prototype.addWorkstream = function(workstream) {\r\n    this.id = ko.observable(workstream.id);\r\n    this.name(workstream.name);\r\n    this.description(workstream.description);\r\n    this.role_id(workstream.role_id);\r\n    this.color(workstream.color);\r\n    this.wait_time_threshold(workstream.wait_time_threshold);\r\n    this.grade_of_service(workstream.grade_of_service);\r\n    this.aht_goal(workstream.aht_goal);\r\n    this.forecast_method_id(parseInt(workstream.forecast_method_id));\r\n    this.abandon_threshold(workstream.abandon_threshold);\r\n    return this;\r\n};","function ManageWorkstreamsViewModel() {\r\n    var self = this;\r\n\r\n    self.workstreams = ko.observableArray([]);\r\n    self.forecast_methods = ko.observableArray([]);\r\n    self.roles = ko.observableArray([]);\r\n    self.saving = ko.observable(false);\r\n\r\n    self.createWorkstream = function() {\r\n        var workstream = new Workstream();\r\n        workstream.saved(false);\r\n        self.workstreams.push(workstream);\r\n        //$('.colpick').colorpicker({'format':'hex'});\r\n    };\r\n\r\n    self.save = function() {\r\n        var self = this;\r\n        self.saving(true);\r\n        $.post(\r\n            \"workstream/workstreams\",\r\n            {data: ko.toJSON(self.workstreams)},\r\n            function(returnedData) {\r\n                self.saving(false);\r\n                ko.utils.arrayForEach(self.workstreams(), function (workstream) {\r\n                    workstream.saved(true);\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n\r\n    $.getJSON(\"workstream/forecast-methods\", [], function(allData) {\r\n        if(allData['result'] == 0) {\r\n            self.forecast_methods($.map(allData.data, function(val, key) { var method = new ForecastMethod(); return method.addForecastMethod(val.id, val.name)}))\r\n        }\r\n        $.getJSON('role/available-roles', {}, function(allData) {\r\n            $.each(allData.data, function(key, val) {\r\n                var role = new Role();\r\n                self.roles.push(role.addRole(key, val));\r\n            });\r\n            $.getJSON(\"workstream/workstream\", [], function(allData) {\r\n                if(allData['result'] == 0) {\r\n                    self.workstreams($.map(allData.data, function(val, key) { var task = new Workstream(); return task.addWorkstream(val)}));\r\n                }\r\n                //$('.colpick').colorpicker({'format':'hex'});\r\n            });\r\n        });\r\n    });\r\n\r\n\r\n}\r\n\r\nvar manage_workstreams_view_model = new ManageWorkstreamsViewModel()\r\nko.applyBindings(manage_workstreams_view_model);"],"sourceRoot":"/source/"}